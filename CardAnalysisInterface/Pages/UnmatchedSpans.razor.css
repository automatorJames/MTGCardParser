/* UnmatchedSpans.razor.css */

/* =================================================================== */
/* == CONTAINER & TOOLTIP STYLES (Unchanged)                        == */
/* =================================================================== */

.unmatched-spans-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    padding: 1rem;
}

.word-tree-card {
    width: 90%;
    background-color: #252525;
    border-radius: 8px;
    border: 1px solid #333;
    overflow: visible;
}

::deep #word-tree-tooltip {
    /* ... tooltip styles remain unchanged ... */
    position: absolute;
    background-color: rgba(20, 20, 20, 0.9);
    color: #f0f0f0;
    padding: 9px 14px;
    border-radius: 6px;
    border: 1px solid #555;
    font-size: 13px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    box-shadow: 0 4px 15px rgba(0,0,0,0.5);
    pointer-events: none;
    opacity: 0;
    white-space: nowrap;
    z-index: 1000;
    transition: opacity 0.2s ease, transform 0.2s ease;
    transform: translate(-50%, -120%);
}


/* =================================================================== */
/* == SVG VISUALIZATION STYLES (Final Refactor)                     == */
/* =================================================================== */

::deep {
    /*
     * THIS IS THE CENTRAL CONTROL FOR ANIMATION SPEED
     * Change this single value to speed up or slow down all transitions.
    */
    --transition-speed: 0.1s;
}

    /* --- Default Element Styles --- */

    ::deep .node-shape {
        stroke: var(--node-border-color, #666);
        stroke-width: 1.5px;
        fill: #2d2d2d;
    }

    ::deep .connector-path {
        stroke: var(--node-border-color, #444);
        fill: none;
        stroke-width: 2.5px;
    }

    ::deep .node-text {
        font-size: 12px;
        fill: #e0e0e0;
        text-anchor: middle;
        pointer-events: none;
    }

    /* --- THE CORE ANIMATION FIX --- */

    /*
 * UNIFIED TRANSITION RULE:
 * 1. All visual elements that change now have their transitions defined here.
 * 2. We use 'linear' timing so the rate of change is constant, making all
 *    animations feel perfectly synchronized.
 * 3. Everything is controlled by the --transition-speed variable.
*/
    ::deep .node-shape,
    ::deep .connector-path,
    ::deep .node-text {
        transition: opacity var(--transition-speed) linear, stroke var(--transition-speed) linear, stroke-width var(--transition-speed) linear, fill var(--transition-speed) linear;
    }


    /* --- Highlight Effect Logic --- */

    /* 
 * We now apply the opacity change directly to the specific elements
 * instead of the parent group, allowing for a single unified transition rule.
*/
    ::deep .is-highlighting .node-group:not(.highlight):not(.anchor-node-group) .node-shape,
    ::deep .is-highlighting .node-group:not(.highlight):not(.anchor-node-group) .node-text,
    ::deep .is-highlighting .connector-path:not(.highlight) {
        opacity: 0.15;
    }

    /* 
 * The highlight rule remains the same, overriding the default styles.
 * It uses !important to beat the inline style from the JS gradient.
*/
    ::deep .node-group.highlight .node-shape,
    ::deep .connector-path.highlight {
        stroke: #ffffff !important;
        stroke-width: 4px;
        opacity: 1;
    }

    /* Also make the text in a highlighted node brighter */
    ::deep .node-group.highlight .node-text {
        fill: #ffffff;
        opacity: 1;
    }
