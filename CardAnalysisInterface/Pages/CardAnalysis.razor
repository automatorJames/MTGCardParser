@page "/"
@page "/card-analysis"
@inject IJSRuntime JSRuntime
@inject CardDigester CardDigester
@inject RuntimeSettings RuntimeSettings
@implements IDisposable

<body id="card-analysis">
    @foreach (var cardDigest in GetFilteredCards())
    {
        <CardBlock CardDigest=cardDigest />
    }
</body>


@code {

    protected override void OnInitialized()
    {
        RuntimeSettings.OnChanged += StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await JSRuntime.InvokeVoidAsync("initCardCaptureHover");
    }

    IEnumerable<CardDigest> GetFilteredCards()
    {
        if (RuntimeSettings.HideFullyMatchedCards)
            return CardDigester.DigestedCards.Where(x => !x.IsFullyMatched);

        return CardDigester.DigestedCards;
    }

    public void Dispose()
    {
        RuntimeSettings.OnChanged -= StateHasChanged;
    }
}