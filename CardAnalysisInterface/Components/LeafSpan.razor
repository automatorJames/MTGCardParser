<span class=@_class
style=@_style
data-path=@_dataPath>
    @FormatText(Leaf.Text)
</span>


@code {

    [Parameter, EditorRequired]
    public SpanLeaf Leaf { get; set; } = default!;

    [Parameter]
    public bool Capitalize { get; set; }

    string _class => 
        Leaf.IgnoreInAnalysis ? "" 
        : $"prop-capture-inline leaf{(Leaf.PropertyCapture.RegexPropInfo.UnderlyingType == typeof(PlaceholderCapture) ? " distilled" : "")}";

    string _style => GetStyle();
    string _dataPath => Leaf.IgnoreInAnalysis ? "" : Leaf.Path;

    string FormatText(string text)
    {
        if (Capitalize)
            return text.CapitalizeFirstWord();

        return text;
    }

    string GetStyle()
    {
        if (Leaf.IgnoreInAnalysis)
            return "";

        var style = Leaf.Palette.ToColorStyle();

        //A wee harmless hack to ensure the overline highlights at the same lower Y coord as the closest underline
        var paddingBottom = 8 + (Leaf.NestedDepth * 4);
    
        style += $" padding-bottom: {paddingBottom}px;";
    
        return style;
    }
}