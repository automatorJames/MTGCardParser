<span class=@_class
style=@_style
data-path=@_dataPath>
    @Leaf.Text
</span>


@code {

    [Parameter, EditorRequired]
    public SpanLeaf Leaf { get; set; } = default!;

    string _class => Leaf.IgnoreInAnalysis ? "" : $"prop-capture-inline leaf{(Leaf.PropertyCapture.IsComplex ? " complex" : "")}";
    string _style => Leaf.IgnoreInAnalysis ? "" : Leaf.Palette.ToColorStyle();
    string _dataPath => Leaf.IgnoreInAnalysis ? "" : Leaf.Path;

    //string getstyle(propertyCaptureTokenLeafPart propCapturePart)
    //{
    //    var style = propCapturePart.Palette.ToColorStyle();
    //
    //    //A wee harmless hack to ensure the overline highlights at the same lower Y coord as the closest underline
    //    var paddingBottom = 8 + (ImmediateParentToken.NestedDepth * 4);
    //
    //    style += $" padding-bottom: {paddingBottom}px;";
    //
    //    return style;
    //}
}