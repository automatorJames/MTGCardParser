@if (Span.CollapseInAnalysis)
{
    @foreach (var branch in Span.Branches)
    {
        <PropertyValueTable Span=@branch />
    }
}
else
{
    <div class=@GetWrapperCss()>
        <span data-path=@Span.Path
              class="token-type-name"
              style=@Span.Palette.ToColorStyle()>
            @Span.DisplayName
        </span>

        <div class="content-box" data-path=@Span.Path style=@Span.Palette.ToColorStyle(-1))>

            @if (Span.LeavesOrDistilled.Any())
            {
                <table class="property-capture-table" data-path=@Span.Path>
                    <thead>
                        <tr><th>Property</th><th>Type</th><th>Value</th></tr>
                    </thead>
                    <tbody>
                        @foreach (var leaf in Span.LeavesOrDistilled)
                        {
                            <tr>
                                <td 
                                data-path=@leaf.Path
                                class="prop-capture-table-cell first-column"
                                style=@(leaf.Palette.ToColorStyle() + "font-weight: bold")>
                                    @leaf.PropertyCapture.RegexPropInfo.FriendlyPropName
                                </td>

                                <td 
                                data-path=@leaf.Path
                                class="prop-capture-table-cell"
                                style=@(leaf.Palette.ToColorStyle() + "color:grey; font-style: italic;")>
                                    @leaf.PropertyCapture.RegexPropInfo.FriendlyTypeName
                                </td>
                                <td 
                                data-path=@leaf.Path
                                class="prop-capture-table-cell"
                                style=@(leaf.Palette.ToColorStyle() + "color:white;")>
                                    @leaf.PropertyCapture.Value.ToString()
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            @foreach (var branch in Span.Branches)
            {
                <PropertyValueTable Span=@branch />
            }
        </div>
    </div>
}




@code {
    [Parameter, EditorRequired]
    public SpanBranch Span { get; set; } = default!;

    string GetWrapperCss()
    {
        var css = "property-table-wrapper";

        if (Span is SpanRoot)
            css += " match-boundary";

        return css;
    }
}