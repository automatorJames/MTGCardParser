@using MTGPlexer.TokenAnalysis

<div class="span-card-container">

    <!-- Preceding Adjacency Column (40%) -->
    <div class="adjacency-column before">
        @if (SpanData.PrecedingAdjacencies.Any())
        {
            <div class="adjacency-root-container">
                @foreach (var node in SpanData.PrecedingAdjacencies)
                {
                    <AdjacencyNodeDisplay Node="node" />
                }
            </div>
        }
    </div>

    <!-- Center Panel (20%) -->
    <div class="center-panel">
        <div class="stat-item">
            <div class="stat-key">Occurrences</div>
            <div class="stat-value palette-teal">@SpanData.ExactPhraseFrequency</div>
        </div>
        <div class="center-text-wrapper">
            <!-- Connector lines leaving the center box -->
            @if (SpanData.PrecedingAdjacencies.Any())
            {
                <div class="center-connector before"></div>
            }
            @if (SpanData.FollowingAdjacencies.Any())
            {
                <div class="center-connector after"></div>
            }
            <pre class="center-text">@SpanData.Text</pre>
        </div>
        <div class="stat-item">
            <div class="stat-key">Words</div>
            <div class="stat-value palette-amber">@SpanData.WordCount</div>
        </div>
    </div>

    <!-- Following Adjacency Column (40%) -->
    <div class="adjacency-column after">
        @if (SpanData.FollowingAdjacencies.Any())
        {
            <div class="adjacency-root-container">
                @foreach (var node in SpanData.FollowingAdjacencies)
                {
                    <AdjacencyNodeDisplay Node="node" />
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public AnalyzedUnmatchedSpan SpanData { get; set; }
}