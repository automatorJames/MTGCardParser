<span class=@_class style=@_style data-path=@_dataPath>
    @for (int i = 0; i < Span.Children.Count; i++)
    {
        var childSpan = Span.Children[i];

        @if (childSpan is SpanBranch branch)
        {
            <NestedSpanRecursive Span=@branch />
        }
        else if (childSpan is SpanTerminal terminal)
        {
            if (terminal is SpanLeaf leaf)
            {
                <LeafSpan Leaf=@leaf />
            }
            else if (terminal is SpanTwig twig)
            {
                <span class=@_twigClass>
                    @twig.Text
                </span>
            }
        }
    }
</span>


@code {

    [Parameter, EditorRequired]
    public SpanBranch Span { get; set; } = default!;

    [Parameter]
    public string AncestorIds { get; set; } = "";

    string _class => Span.IgnoreInAnalysis ? "analysis-ignored-span" : "nested-underline";
    string _twigClass => Span.IgnoreInAnalysis ? "" : "twig";
    string _style => Span.IgnoreInAnalysis ? "" : Span.Palette.ToColorStyle();
    string _dataPath => Span.IgnoreInAnalysis ? "" : Span.Path;
}